

SET UP TESTING to stay sane between changes


Maybe there should be different types of 'add_effect'
because not all relics need events. Some just do things
when they are equipped like a max health upgrade.


relic that decreases the count for all counter relics by 1
- Needs to find all the relics with related effect and modify the count stat
	- DONE, but could potentially be improved beyond a simple search.
- New counter relic must also be affected
	- DONE, on_player_add_relic event
- Removable
 - DONE
- What if this relic is modified? Needs to propagate the changes down.
	- Related to STATBLOCKS


equipment (A) that adds 2 health to all players
equipment (B) that modifies A, double effect for [condition]
	- Conditional modifyer, not a strict modifyer.
	- Condition application may change on an individual basis over time


Turn events into objects with predefined properties
Validate events on relics and make sure that event is compatible
Some relics might have predefined connected events
*   Relic that modify relic need to have a "on_player_add_relic" to update new relics


Not a huge fan of the equip / unequip of the change timing effect.
Could switch to an event based system as well.
.add_effect("on_relic_counter_increase", ChangeTiming(1))
pass in (max_count, curr_count, triggers) in event_data

ChangeRelicTiming has a list of effects,
what happens if the relic with thaat effect is deleted?
*   Add a remove_relic listener?
*   listen to each other?


Effect that adds more effects to the relic.
Effect that lets you trigger a relic with an on equip effect

Abstract out validators so that the same effects can happen under different conditions

All effects should use event_data rather than personal data

Relic with effect "Modifiers of type X add +1 to you"
*   add_modifier event
*   when modifier added, apply mod, add listener to mod,
    then trigger the add_modifier. modify the mod and trigger
    the event which ripples back down to us and updates mod value.
X   But what if the modifier affected multiple player (enchantment)
    For example all players gain 2 power.

Relic with "Gain power equal the number of relics"
*   Has a modifier for power. Which has a listener to
    on_player_add_relic and remove_relic that would trigger
    an update.

An effect that toggles a value.

How to prevent certain effects from triggering on events?
Or perhaps this just an effec tht negates another effect

Abilities are a composite of effects.
	Lifesteal = Ability.add_effect(heal on damage dealt)
	Relic.add_ability(Lifesteal)

mediator patterns for stats that have a current and max (like health, mana)?
mediator will create a connection between max and current
and adjust accordingly whenever something changes
