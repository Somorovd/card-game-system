

SET UP TESTING to sty sane between changes


Maybe there should be different types of 'add_effect'
because not all relics need events. Some just do things
when they are equipped like a max health upgrade.


relic that decreases the count for all counter relics by 1
- Needs to find all the relics with related effect and modify the count stat
	- DONE, but could potentially be improved beyond a simple search.
- New counter relic must also be affected
	- DONE, on_player_add_relic event
- Removable
 - DONE
- What if this relic is modified? Needs to propagate the changes down.
	- Related to STATBLOCKS


equipment (A) that adds 2 health to all players
equipment (B) that modifies A, double effect for [condition]
	- Conditional modifyer, not a strict modifyer.
	- Condition application may change on an individual basis over time


Turn events into objects with predefined properties
Validate events on relics and make sure that event is compatible
Some relics might have predefined connected events
- Counter modifiers need to have a "on_player_add_relic" to update new relics


Not a huge fan of the equip / unequip of the change timing effect.
Could switch to an event based system as well.
.add_effect("on_relic_counter_increase", ChangeTiming(1))
pass in (max_count, curr_count, triggers) in event_data


Effect that adds more effects to the relic.
Effect that lets you trigger a relic with an on equip effect

Abstract out vlidators so that the same effects can happen under different conditions

Combine GameManager and EventManager

All effects should use event_data rather than personal data
